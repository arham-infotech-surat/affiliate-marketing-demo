<?phpdefined('BASEPATH') OR exit('No direct script access allowed');class Page extends CI_Controller {	/**	 * Index Page for this controller.	 *	 * Maps to the following urldecode(str)	 * 		http://example.com/index.php/welcome	 *	- or -	 * 		http://example.com/index.php/welcome/index	 *	- or -	 * Since this controller is set as the default controller in	 * config/routes.php, it's displayed at http://example.com/	 *	 * So any other public methods not prefixed with an underscore will	 * map to /index.php/welcome/<method_name>	 * @see https://codeigniter.com/user_guide/general/urls.html	 */	public function __construct(){		parent:: __construct();	    $this->load->model('Page_Modal');	    $this->load->library('form_validation');	    $this->tbl_page="tbl_page";	 	$this->tbl_addmore="tbl_addmore";		if (!isset($this->session->userdata('newdata')['logged_in'])) 		{			redirect('Login','refresh');		} 	       	}//--------------------------------------------- Index Page --------------------------------------->	public function index()	{		$data['result'] = $this->Page_Modal->fetch_pages();		$this->load->view('admin/pageView',$data);	}//--------------------------------------------- End ----------------------------------------------->//--------------------------------------------- Page Add Page --------------------------------------->	public function pageAdd()	{		// echo "hii----";		if($this->input->post('Add')) //if(isset($_POST['register']))		{			// echo "hii"; die;			$this->load->library('form_validation');			$this->form_validation->set_rules('page_name', 'Page Name', 'required');			$this->form_validation->set_rules('slug', 'Slug Name', 'required');			$this->form_validation->set_rules('title', 'Title Name', 'required');			$this->form_validation->set_rules('page_desc', 'Page Description', 'required');			$this->form_validation->set_rules('meta_tag_title', 'Meta Tag Title', 'required');			$this->form_validation->set_rules('meta_tag_description', 'Meta Tag Description', 'required');			$this->form_validation->set_rules('meta_tag_keywords', 'Meta Tag Keywords', 'required');					if ($this->form_validation->run() == FALSE)            {                    $this->load->view('admin/pageAdd');            }			else{					//echo "else"; die;			if(!empty($_FILES['image']['name'])){						$config['upload_path'] = 'assets/Uploads/Images/';						$config['allowed_types'] = 'jpg|jpeg|png';						$config['file_name'] = $_FILES['image']['name'];						$config['max_size']	= '1000';						//Load upload library and initialize configuration						$this->load->library('upload',$config);						$this->upload->initialize($config);												if($this->upload->do_upload('image')){							$uploadData = $this->upload->data();							$image = $uploadData['file_name'];						}else{							$image = '';						}					}else{						$image = '';					}			if(!empty($_FILES['multi_images']['name'])){						$config['upload_path'] = 'assets/Uploads/Images/';						$config['allowed_types'] = 'jpg|jpeg|png';						$config['file_name'] = $_FILES['multi_images']['name'];						$config['max_size']	= '1000';						//Load upload library and initialize configuration						$this->load->library('upload',$config);						$this->upload->initialize($config);												if($this->upload->do_upload('multi_images')){							$uploadData = $this->upload->data();							$multi_images = $uploadData['file_name'];						}else{							$multi_images = '';						}					}else{						$multi_images = '';					}						// echo $picture; die;				$slug=$this->input->post('slug'); //$_POST['user_name']				$page_name=$this->input->post('page_name');				$title=$this->input->post('title');				$page_desc=$this->input->post('page_desc');				$meta_tag_title=$this->input->post('meta_tag_title');				$meta_tag_description=$this->input->post('meta_tag_description');				$meta_tag_keywords=$this->input->post('meta_tag_keywords');								// $gender=$this->input->post('gender');				// $hobbies_array=implode(",", $this->input->post('hobbies'));												$data = array(					'slug' =>  $slug,					'page_name' => $page_name,					'page_desc' =>  $page_desc,					'meta_tag_title' =>  $meta_tag_title,					'meta_tag_description' => $meta_tag_description,					'meta_tag_keywords' => $meta_tag_keywords,					'image' => $image,					'multi_images' => $multi_images,				);									$result = $this->Page_Modal->insert_pages($data);				if($result)				{					//$this->db->insert('user_table',$data);					$this->session->set_flashdata('success', 'Record Added Successfully....');					redirect('Page/pageAddMore');					//redirect('Page/');				}				else				{					$this->session->set_flashdata('success', 'Record Not Added....');					redirect('Page/');				}						}		}			else		{			$this->load->view('admin/pageAdd');		}	}//--------------------------------------------- End ----------------------------------------------->//--------------------------------------- Edit page ------------------------------------------->	public function edit_page()	{		if($this->uri->segment(3) === false){ //$_GET['user_Id']			$page_id = 0;		}		else{			$page_id = $this->uri->segment(3);		}		// echo $page_id; die;		$result['data'] = $this->Page_Modal->get_page_data($page_id);		$this->load->view('admin/pageEdit',$result);	}		//Update Page	public function pageEdit()	{		if($this->uri->segment(3) === false){ //$_GET['user_Id']			$page_id = 0;		}		else{			$page_id = $this->uri->segment(3);			$this->session->set_userdata('Edit_ID', $page_id);		}		//echo $user_Id; die;		if($this->input->post('Edit')) //if(isset($_POST['update']))		{			// echo 'hgold'; die;			if(!empty($_FILES['image']['name'])){						$config['upload_path'] = 'assets/Uploads/Images/'; 						$config['allowed_types'] = 'jpg|jpeg|png|gif';						$config['file_name'] = $_FILES['image']['name'];												//Load upload library and initialize configuration						$this->load->library('upload',$config);						$this->upload->initialize($config);												if($this->upload->do_upload('image')){							$uploadData = $this->upload->data();							$image = $uploadData['file_name'];						}else{							$image = '';						}					}			else{				$image = $this->input->post('oldimage');			}						if(!empty($_FILES['multi_images']['name'])){						$config['upload_path'] = 'assets/Uploads/Images/';						$config['allowed_types'] = 'jpg|jpeg|png';						$config['file_name'] = $_FILES['multi_images']['name'];						$config['max_size']	= '1000';						//Load upload library and initialize configuration						$this->load->library('upload',$config);						$this->upload->initialize($config);												if($this->upload->do_upload('multi_images')){							$uploadData = $this->upload->data();							$multi_images = $uploadData['file_name'];						}else{							$multi_images = '';						}					}else{						$multi_images = $this->input->post('oldimage2');					}				$slug=$this->input->post('slug'); //$_POST['user_name']				$page_name=$this->input->post('page_name');				$title=$this->input->post('title');				$page_desc=$this->input->post('page_desc');				$meta_tag_title=$this->input->post('meta_tag_title');				$meta_tag_description=$this->input->post('meta_tag_description');				$meta_tag_keywords=$this->input->post('meta_tag_keywords');											$data = array(				'slug' =>  $slug,				'page_name' => $page_name,				'page_desc' =>  $page_desc,				'meta_tag_title' =>  $meta_tag_title,				'meta_tag_description' => $meta_tag_description,				'meta_tag_keywords' => $meta_tag_keywords,				'image' => $image,				'multi_images' => $multi_images,			);			// $page_ID=$this->session->userdata('page_ID');			$result = $this->Page_Modal->pageEdit($data,$page_id);			if($result)			{			//$this->db->insert('user_table',$data);				$this->session->set_flashdata('success', 'Record Updated Successfully....');				redirect('Page/pageEditAddMore');				//redirect('Page/');			}			else			{				$this->session->set_flashdata('success', 'Record Not Update....');				redirect('Page/index');			}					} 			}//------------------------------------------ End Edit Add Page ------------------------------------------>//------------------------------------------ Page Delete -------------------------------------------->	public function delete_page()	{		if($this->uri->segment(3) === false){			$page_id = 0;		}		else{			$page_id = $this->uri->segment(3);		}		//echo $user_Id; die;				$result = $this->Page_Modal->pageRemove($page_id);						if($result){			redirect('Page');		}	}//--------------------------------------------- End ------------------------------------------------->//--------------------------------------------- Page Add More Page --------------------------------->public function pageAddMore()	{		// echo "hii----";		if($this->input->post('Add')) //if(isset($_POST['register']))		{			// echo "hii"; die;			$this->load->library('form_validation');			$this->form_validation->set_rules('title', 'Title', 'required');			$this->form_validation->set_rules('short_desc', 'Short Description', 'required');			$this->form_validation->set_rules('extra_desc', 'Extra Description', 'required');					if ($this->form_validation->run() == FALSE)            {                    $this->load->view('admin/pageAddMore');            }			else{					//echo "else"; die;			if(!empty($_FILES['icon']['name'])){						$config['upload_path'] = 'assets/Uploads/Images/';						$config['allowed_types'] = 'jpg|jpeg|png';						$config['file_name'] = $_FILES['icon']['name'];						$config['max_size']	= '1000';						//Load upload library and initialize configuration						$this->load->library('upload',$config);						$this->upload->initialize($config);												if($this->upload->do_upload('icon')){							$uploadData = $this->upload->data();							$icon = $uploadData['file_name'];						}else{							$icon = '';						}					}else{						$icon = '';					}			// echo $picture; die;				$title=$this->input->post('title');				$short_desc=$this->input->post('short_desc');				$extra_desc=$this->input->post('extra_desc');				$Pg_Id=$this->session->userdata('Pg_Id') ? $this->session->userdata('Pg_Id') : $this->session->userdata('Edit_page_ID') ; 								// $gender=$this->input->post('gender');				// $hobbies_array=implode(",", $this->input->post('hobbies'));												$data = array(					'page_id' =>  $Pg_Id,					'title' =>  $title,					'extra_icon' =>  $icon,					'small_desc' =>  $short_desc,					'extra_desc' =>  $extra_desc				);									$result = $this->Page_Modal->insert_more_data($data);				if($result)				{					//$this->db->insert('user_table',$data);					$this->session->set_flashdata('success', 'Record Added Successfully....');					redirect('Page/pageAddMore');				}				else				{					$this->session->set_flashdata('success', 'Record Not Added....');					redirect('Page/pageAddMore');				}						}		}			else		{			$this->load->view('admin/pageAddMore');		}	}//--------------------------------------- End Add PAge More ---------------------------------------->//------------------------------------------ Edit Extra Data -------------------------------------->//Update Add More Page	public function pageEditAddMore()	{				//echo $user_Id; die;		if($this->input->post('Edit')) //if(isset($_POST['update']))		{			// echo 'hgold'; die;			if(!empty($_FILES['extra_icon']['name'])){						$config['upload_path'] = 'assets/Uploads/Images/'; 						$config['allowed_types'] = 'jpg|jpeg|png|gif';						$config['file_name'] = $_FILES['extra_icon']['name'];												//Load upload library and initialize configuration						$this->load->library('upload',$config);						$this->upload->initialize($config);												if($this->upload->do_upload('extra_icon')){							$uploadData = $this->upload->data();							$extra_icon = $uploadData['file_name'];						}else{							$extra_icon = '';						}					}			else{				$extra_icon = $this->input->post('oldimage');			}													$title=$this->input->post('title');				$small_desc=$this->input->post('small_desc');				$extra_desc=$this->input->post('extra_desc');											$data = array(				'title' =>  $title,				'small_desc' => $small_desc,				'extra_desc' =>  $extra_desc,				'extra_icon' => $extra_icon,			);						$addmore_ID = $this->session->userdata('addmore_ID');			// $page_ID=$this->session->userdata('page_ID');			$result = $this->Page_Modal->edit_extra_data($data,$addmore_ID);			if($result)			{			//$this->db->insert('user_table',$data);				$this->session->set_flashdata('success', 'Record Updated Successfully....');				// redirect('Page/pageEditAddMore');				redirect('Page/pageEditAddMore');			}			else			{				$this->session->set_flashdata('success', 'Record Not Update....');				redirect('Page/index');			}					} 		else{			$Edit_ID = $this->session->userdata('Edit_ID');			$result['data'] = $this->Page_Modal->get_add_more_data($Edit_ID);				$this->load->view('admin/pageEditAddMore', $result);		}			}//------------------------------------------------ End Extra Data ------------------------------------------->//-------------------------------------------- Delete Extra Contents ---------------------------------------->	public function deleteExtraContent()	{		if($this->uri->segment(3) === false){			$addmore_id = 0;		}		else{			$addmore_id = $this->uri->segment(3);		}		//echo $user_Id; die;				$result = $this->Page_Modal->remove_extra_data($addmore_id);						if($result){			redirect('Page/pageEditAddMore');		}	}//------------------------------------------------ End ------------------------------------------------------>//-------------------------- Multiple Delete ----------------------->	public function pages_MultipleDelete(){		$delIds = $this->input->post('checkChk');		$this->Page_Modal->pages_MultipleDelete($delIds);			}//----------------------------- End -------------------------------->}